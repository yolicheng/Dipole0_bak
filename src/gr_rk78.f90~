SUBROUTINE GR_RK78(X,Y,N,H,HMIN,HMAX,E,R,B,F, DERIV)
!  THIS ROUTINE IS AN IMPLEMENTATION OF A RUNGE-KUTTA-FEHLBERG
!  METHOD OF ORDERS 7 AND 8. USING A TOTAL OF 13 STEPS (AND
!  EVALUATIONS OF THE VECTORFIELD) IT COMPUTES TWO DIFFERENT
!  ESTIMATIONS OF THE NEXT POINT. THE DIFFERENCE BETWEEN BOTH
!  ESTIMATIONS (WITH LOCAL ERRORS OF ORDER 8 AND 9) IS COMPUTED
!  AND THE L1 NORM IS OBTAINED. THIS NORM IS DIVIDED BY N (THE
!  NUMBER OF EQUATIONS). THE NUMBER OBTAINED IN THIS WAY IS REQUIRED
!  TO BE LESS THAN A GIVEN TOLERANCE E1 TIMES (1+0.01*DD) WHERE DD
!  IS THE L1 NORM OF THE POINT COMPUTED TO ORDER 8. IF THIS
!  REQUIREMENT IS SATISFIED THE ORDER 8 ESTIMATION IS TAKEN AS THE
!  NEXT POINT. IF NOT, A SUITABLE VALUE OF THE STEP H IS OBTAINED
!  AND THE COMPUTATION IS STARTED AGAIN.
!  IN ANY CASE, WHEN THE NEXT POINT IS COMPUTED, A PREDICTION OF
!  THE STEP H, TO BE USED IN THE NEXT CALL OF THE ROUTINE, IS
!  DONE.
!
!  INPUT DATA:
!
!       X  CURRENT VALUE OF THE INDEPENDENT VARIABLE.
!    Y(I) I=1,N  THE CURRENT VALUE OF THE DEPENDENT VARIABLE.
!       N  THE DIMENSION OF THE DEPENDENT VARIABLE.
!       H  THE TIME STEP TO BE USED.
!     HMIN  THE MINIMUM ALLOWED VALUE FOR THE ABSOLUTE VALUE OF H.
!    HMAX  THE MAXIMUM ALLOWED VALUE FOR THE ABSOLUTE VALUE OF H.
!      E1  A TOLERANCE.
!   DERIV  THE NAME OF THE ROUTINE COMPUTING THE VECTOR FIELD (TO
!          BE DECLARED EXTERNAL IN THE CALLING PROGRAM).
!
!  OUTPUT DATA:
!
!       X  THE NEXT VALUE OF THE INDEPENDENT VARIABLE.
!     Y(I) I=1,N  THE ESTIMATED NEXT VALUE FOR THE DEPENDENT
!          VARIABLE.
!       H  THE TIME STEP TO BE USED IN THE NEXT CALL OF THIS
!          ROUTINE.
!
!  AUXILIARY PARAMETERS:
!
!  R,B,F   A MATRIX OF DIMENSIONE

!  ROUTINES USED: DERIV

!  REVISED TO F90 FREE FORMAT BY YU - 20160306
!  BETTER TO USE AS STAND-ALONE SUBROUTINE, WHICH COULD BE CALLED ANYWHERE
!********************************************************************

IMPLICIT NONE
INTEGER, PARAMETER :: DP = KIND(1.D0) 
  
INTEGER, INTENT(IN) :: N 
REAL(KIND=DP), INTENT(IN) ::  HMIN, HMAX, E
REAL(KIND=DP), INTENT(INOUT) :: X, Y(N), H
EXTERNAL DERIV
  
! LOCAL VARAIBLES
INTEGER :: II, J, J1, JK, K, L 
REAL(KIND=DP) ::  A,BET,ALFA(13), R(13,N),B(N),F(N), &
                  BETA(79),C(11),CP(13),D,DD,E3,E4, FAC
            
DATA II/0/
SAVE II, ALFA, BETA, C, CP ! CHANGE BETA TO BETACK TO AVOID COMFLICT WITH THE BETA IN LFMOD... IS IT NECESSARY? I DON'T THINK SO
         
!  PRINT*, 'II, H, HMIN, HMAX, E1', II, H, HMIN, HMAX, E  
!  READ(*,*) 
         
IF ( II == 0) THEN 
 
  II=1
  ALFA(1)=0.D0
  ALFA(2)=2.D0/27.D0
  ALFA(3)=1.D0/9.D0
  ALFA(4)=1.D0/6.D0
  ALFA(5)=5.D0/12.D0
  ALFA(6)=.5D0
  ALFA(7)=5.D0/6.D0
  ALFA(8)=1.D0/6.D0
  ALFA(9)=2.D0/3.D0
  ALFA(10)=1.D0/3.D0
  ALFA(11)=1.D0
  ALFA(12)=0.D0
  ALFA(13)=1.D0
  
  BETA(1)=0.D0
  BETA(2)=2.D0/27.D0
  BETA(3)=1.D0/36.D0
  BETA(4)=1.D0/12.D0
  BETA(5)=1.D0/24.D0
  BETA(6)=0.D0
  BETA(7)=1.D0/8.D0
  BETA(8)=5.D0/12.D0
  BETA(9)=0.D0
  BETA(10)=-25.D0/16.D0
  BETA(11)=-BETA(10)
  BETA(12)=.5D-1
  BETA(13)=0.D0
  BETA(14)=0.D0
  BETA(15)=.25D0
  BETA(16)=.2D0
  BETA(17)=-25.D0/108.D0
  BETA(18)=0.D0
  BETA(19)=0.D0
  BETA(20)=125.D0/108.D0
  BETA(21)=-65.D0/27.D0
  BETA(22)=2.D0*BETA(20)
  BETA(23)=31.D0/300.D0
  BETA(24)=0.D0
  BETA(25)=0.D0
  BETA(26)=0.D0
  BETA(27)=61.D0/225.D0
  BETA(28)=-2.D0/9.D0
  BETA(29)=13.D0/900.D0
  BETA(30)=2.D0
  BETA(31)=0.D0
  BETA(32)=0.D0
  BETA(33)=-53.D0/6.D0
  BETA(34)=704.D0/45.D0
  BETA(35)=-107.D0/9.D0
  BETA(36)=67.D0/90.D0
  BETA(37)=3.D0
  BETA(38)=-91.D0/108.D0
  BETA(39)=0.D0
  BETA(40)=0.D0
  BETA(41)=23.D0/108.D0
  BETA(42)=-976.D0/135.D0
  BETA(43)=311.D0/54.D0
  BETA(44)=-19.D0/60.D0
  BETA(45)=17.D0/6.D0
  BETA(46)=-1.D0/12.D0
  BETA(47)=2383.D0/4100.D0
  BETA(48)=0.D0
  BETA(49)=0.D0
  BETA(50)=-341.D0/164.D0
  BETA(51)=4496.D0/1025.D0
  BETA(52)=-301.D0/82.D0
  BETA(53)=2133.D0/4100.D0
  BETA(54)=45.D0/82.D0
  BETA(55)=45.D0/164.D0
  BETA(56)=18.D0/41.D0
  BETA(57)=3.D0/205.D0
  BETA(58)=0.D0
  BETA(59)=0.D0
  BETA(60)=0.D0
  BETA(61)=0.D0
  BETA(62)=-6.D0/41.D0
  BETA(63)=-3.D0/205.D0
  BETA(64)=-3.D0/41.D0
  BETA(65)=-BETA(64)
  BETA(66)=-BETA(62)
  BETA(67)=0.D0
  BETA(68)=-1777.D0/4100.D0
  BETA(69)=0.D0
  BETA(70)=0.D0
  BETA(71)=BETA(50)
  BETA(72)=BETA(51)
  BETA(73)=-289.D0/82.D0
  BETA(74)=2193.D0/4100.D0
  BETA(75)=51.D0/82.D0
  BETA(76)=33.D0/164.D0
  BETA(77)=12.D0/41.D0
  BETA(78)=0.D0
  BETA(79)=1.D0
   
  C(1)=41.D0/840.D0
  C(2)=0.D0
  C(3)=0.D0
  C(4)=0.D0
  C(5)=0.D0
  C(6)=34.D0/105.D0
  C(7)=9.D0/35.D0
  C(8)=C(7)
  C(9)=9.D0/280.D0
  
  C(10)=C(9)
  C(11)=C(1)
  CP(1)=0.D0
  CP(2)=0.D0
  CP(3)=0.D0
  CP(4)=0.D0
  CP(5)=0.D0
  CP(6)=C(6)
  CP(7)=C(7)
  CP(8)=C(8)
  CP(9)=C(9)
  CP(10)=C(10)
  CP(11)=0.D0
  CP(12)=C(1)
  CP(13)=C(1)
    
ELSE ! (II .NE. 1)
    
  DO 
    JK=1
      
    DO   J=1,13 ! 3
     
      DO   L=1,N !6
        B(L)=Y(L)
      ENDDO 

      A=X+ALFA(J)*H
         
      IF(J .NE. 1) THEN !
        J1=J-1
          
        DO  K=1,J1,1
          JK=JK+1
          BET=BETA(JK)*H
          DO   L=1,N
            B(L)=B(L)+BET*R(K,L)
          ENDDO 
        ENDDO 
           
      ENDIF

      CALL DERIV (A,B,N,F)
      DO   L=1,N
        R(J,L)=F(L)
      ENDDO 
    ENDDO  ! 3     

    D=0
    DD=0
         
    DO L=1,N !- 1
      
      B(L)=Y(L)
      F(L)=Y(L)
      
      DO K=1,11 !--5 
        BET=H*R(K,L)
        B(L)=B(L)+BET*C(K)
        F(L)=F(L)+BET*CP(K)
      ENDDO  ! -5
      
      F(L)=F(L)+H*(CP(12)*R(12,L)+CP(13)*R(13,L))
      D=D+DABS(F(L)-B(L))
      DD=DD+DABS(F(L))
    ENDDO ! -1

    D=D/N 
    FAC=1.+DD*1.D-2
    E3=E*FAC
       
    IF (DABS(H).LT.HMIN.OR.D.LT.E3)  EXIT !GO TO 7
    H=H*0.9D0*(E3/D)**0.125D0
    IF(DABS(H).LT.HMIN)  H=HMIN*H/DABS(H)
  ENDDO 
       
  X=X+H ! -- 7/
  IF(D.LT.E3) D=DMAX1(D,E3/256)
  H=H*0.9D0*(E3/D)**0.125D0
         
  IF(DABS(H).GT.HMAX)  H=HMAX*H/DABS(H)
  IF(DABS(H).LT.HMIN)  H=HMIN*H/DABS(H)
   
  DO L=1,N
    Y(L)=F(L)
  ENDDO 
       
  B(1)=D
ENDIF 
  
RETURN
END SUBROUTINE GR_RK78
         
